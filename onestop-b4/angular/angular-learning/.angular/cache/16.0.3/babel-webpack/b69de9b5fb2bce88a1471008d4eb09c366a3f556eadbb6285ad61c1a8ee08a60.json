{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nclass InterpoComponent {}\nInterpoComponent.ɵfac = function InterpoComponent_Factory(t) {\n  return new (t || InterpoComponent)();\n};\nInterpoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: InterpoComponent,\n  selectors: [[\"app-interpo\"]],\n  standalone: true,\n  features: [i0.ɵɵStandaloneFeature],\n  decls: 10,\n  vars: 1,\n  consts: [[1, \"row\"], [1, \"col\"], [\"for\", \"text\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"text\", \"placeholder\", \"Enter text\", 1, \"form-control\"], [\"text\", \"\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-success\", 3, \"click\"], [1, \"alert\", \"alert-success\"]],\n  template: function InterpoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"label\", 2);\n      i0.ɵɵtext(3, \"Some Text\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 3, 4);\n      i0.ɵɵelementStart(6, \"input\", 5);\n      i0.ɵɵlistener(\"click\", function InterpoComponent_Template_input_click_6_listener() {\n        i0.ɵɵrestoreView(_r1);\n        const _r0 = i0.ɵɵreference(5);\n        return i0.ɵɵresetView(ctx.add(_r0.value));\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 1)(8, \"div\", 6);\n      i0.ɵɵtext(9);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(5);\n      i0.ɵɵadvance(9);\n      i0.ɵɵtextInterpolate(_r0.value);\n    }\n  },\n  dependencies: [CommonModule],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { InterpoComponent };\n// Consider using this interface for all CanDeactivate guards,\n// and have your components implement this interface, too.\n//\n//   e.g. export class CanDeactivateGuard implements CanDeactivate<CanComponentDeactivate> {\n//\n// export interface CanComponentDeactivate {\n// canDeactivate: () => any;\n// }\nclass NameGuard {\n  canDeactivate(component, currentRoute, currentState) {\n    return false;\n  }\n}\nNameGuard.ɵfac = function NameGuard_Factory(t) {\n  return new (t || NameGuard)();\n};\nNameGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: NameGuard,\n  factory: NameGuard.ɵfac,\n  providedIn: 'root'\n});\nexport { NameGuard };","map":{"version":3,"names":["CommonModule","InterpoComponent","selectors","standalone","features","i0","ɵɵStandaloneFeature","decls","vars","consts","template","InterpoComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","InterpoComponent_Template_input_click_6_listener","ɵɵrestoreView","_r1","_r0","ɵɵreference","ɵɵresetView","add","value","ɵɵadvance","ɵɵtextInterpolate","styles","NameGuard","canDeactivate","component","currentRoute","currentState","factory","ɵfac","providedIn"],"sources":["/home/pphyo/Documents/workspace/web/angular-learning/projects/data-binding/src/app/interpo/interpo.component.ts","/home/pphyo/Documents/workspace/web/angular-learning/projects/data-binding/src/app/interpo/interpo.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-interpo',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './interpo.component.html',\n  styleUrls: ['./interpo.component.css']\n})\nexport class InterpoComponent {\n\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanDeactivate, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { ComponentNameComponent } from './filename.component';\n\n// Consider using this interface for all CanDeactivate guards,\n// and have your components implement this interface, too.\n//\n//   e.g. export class CanDeactivateGuard implements CanDeactivate<CanComponentDeactivate> {\n//\n// export interface CanComponentDeactivate {\n// canDeactivate: () => any;\n// }\n\n@Injectable({providedIn: 'root'})\nexport class NameGuard implements CanDeactivate<ComponentNameComponent> {\n  canDeactivate(\n    component: ComponentNameComponent,\n    currentRoute: ActivatedRouteSnapshot,\n    currentState: RouterStateSnapshot\n  ): Observable<boolean>|Promise<boolean>|boolean {\n    return false;\n  }\n}\n\n}\n","<div class=\"row\">\n\n  <div class=\"col\">\n    <label for=\"text\" class=\"form-label\">Some Text</label>\n    <input #text type=\"text\" class=\"form-control\" id=\"text\" placeholder=\"Enter text\">\n    <input type=\"button\" class=\"btn btn-outline-success\" (click)=\"add(text.value)\">\n  </div>\n\n  <div class=\"col\">\n    <div class=\"alert alert-success\">{{ text.value }}</div>\n  </div>\n\n</div>\n"],"mappings":"AACA,SAASA,YAAY,QAAQ,iBAAiB;;AAE9C,MAOaC,gBAAgB;AAAhBA,gBAAgB,C;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB,C;QAAhBA,gBAAgB;EAAAC,SAAA;EAAAC,UAAA;EAAAC,QAAA,GAAAC,EAAA,CAAAC,mBAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;;MCV7BP,EAAA,CAAAS,cAAA,aAAiB;MAGwBT,EAAA,CAAAU,MAAA,gBAAS;MAAAV,EAAA,CAAAW,YAAA,EAAQ;MACtDX,EAAA,CAAAY,SAAA,kBAAiF;MACjFZ,EAAA,CAAAS,cAAA,eAA+E;MAA1BT,EAAA,CAAAa,UAAA,mBAAAC,iDAAA;QAAAd,EAAA,CAAAe,aAAA,CAAAC,GAAA;QAAA,MAAAC,GAAA,GAAAjB,EAAA,CAAAkB,WAAA;QAAA,OAASlB,EAAA,CAAAmB,WAAA,CAAAX,GAAA,CAAAY,GAAA,CAAAH,GAAA,CAAAI,KAAA,CAAe;MAAA,EAAC;MAA9ErB,EAAA,CAAAW,YAAA,EAA+E;MAGjFX,EAAA,CAAAS,cAAA,aAAiB;MACkBT,EAAA,CAAAU,MAAA,GAAgB;MAAAV,EAAA,CAAAW,YAAA,EAAM;;;;MAAtBX,EAAA,CAAAsB,SAAA,GAAgB;MAAhBtB,EAAA,CAAAuB,iBAAA,CAAAN,GAAA,CAAAI,KAAA,CAAgB;;;iBDHzC1B,YAAY;EAAA6B,MAAA;AAAA;SAIX5B,gBAAgB;AAQ7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MACa6B,SAAS;EACpBC,aAAaA,CACXC,SAAiC,EACjCC,YAAoC,EACpCC,YAAiC;IAEjC,OAAO,KAAK;EACd;;AAPWJ,SAAS,C;mBAATA,SAAS;AAAA;AAATA,SAAS,C;SAATA,SAAS;EAAAK,OAAA,EAATL,SAAS,CAAAM,IAAA;EAAAC,UAAA,EADG;AAAM;SAClBP,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}